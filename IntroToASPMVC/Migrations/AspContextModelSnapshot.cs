// <auto-generated />
using System;
using IntroToASPMVC;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IntroToASPMVC.Migrations
{
    [DbContext(typeof(AspContext))]
    partial class AspContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IntroToASPMVC.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "The Shire",
                            HouseNumber = 15,
                            PostalCode = 4500,
                            Street = "TestLane",
                            Unit = "A"
                        },
                        new
                        {
                            Id = 2,
                            City = "Rivendell",
                            HouseNumber = 146,
                            PostalCode = 3500,
                            Street = "That one room next to the waterfall",
                            Unit = "B"
                        },
                        new
                        {
                            Id = 3,
                            City = "Minas Tirith",
                            HouseNumber = 813,
                            PostalCode = 2500,
                            Street = "7th level",
                            Unit = "C"
                        });
                });

            modelBuilder.Entity("IntroToASPMVC.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TelephoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            Category = 2,
                            DateOfBirth = new DateTime(1345, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "frodo@baggins.com",
                            FirstName = "Frodo",
                            Name = "Baggins",
                            ProfilePictureUrl = "http://placeimg.com/200/200/animals",
                            TelephoneNumber = 123456789
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 1,
                            Category = 2,
                            DateOfBirth = new DateTime(1305, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bilbo@baggins.com",
                            FirstName = "Bilbo",
                            Name = "Baggins",
                            ProfilePictureUrl = "http://placeimg.com/200/200/animals",
                            TelephoneNumber = 321012345
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 3,
                            Category = 2,
                            DateOfBirth = new DateTime(1178, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gandalf@thewizard.com",
                            FirstName = "Gandalf",
                            Name = "the Grey",
                            ProfilePictureUrl = "http://placeimg.com/200/200/animals",
                            TelephoneNumber = 987654321
                        });
                });

            modelBuilder.Entity("IntroToASPMVC.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Durability")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("IntroToASPMVC.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genres")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YearOfRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "There is no spoon etc",
                            Genres = 0,
                            Rating = 8,
                            Title = "The Matrix",
                            YearOfRelease = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Space surfing with pirates",
                            Genres = 2,
                            Rating = 10,
                            Title = "Treasure Planet",
                            YearOfRelease = new DateTime(2002, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Lion family drama",
                            Genres = 2,
                            Rating = 9,
                            Title = "The Lion King",
                            YearOfRelease = new DateTime(1994, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Description = "Hasn't happened yet so who knows?",
                            Genres = 6,
                            Rating = 10,
                            Title = "Back to the Future: The actual Future",
                            YearOfRelease = new DateTime(2054, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("IntroToASPMVC.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("Mana")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerClass")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("IntroToASPMVC.Models.Contact", b =>
                {
                    b.HasOne("IntroToASPMVC.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("IntroToASPMVC.Models.Equipment", b =>
                {
                    b.HasOne("IntroToASPMVC.Models.Player", "Player")
                        .WithMany("Equipment")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("IntroToASPMVC.Models.Player", b =>
                {
                    b.Navigation("Equipment");
                });
#pragma warning restore 612, 618
        }
    }
}
